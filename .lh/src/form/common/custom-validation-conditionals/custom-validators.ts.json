{
    "sourceFile": "src/form/common/custom-validation-conditionals/custom-validators.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 12,
            "patches": [
                {
                    "date": 1713979332776,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1713979410141,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n     const cast = value as string\n     if (section && fieldname && drafts) {\n       const limit = drafts[section][fieldname] as string\n       if (limit) {\n-        if (isDateNotPastLimit(cast, new Date(limit))) {\n+        if (new Date(cast) >= new Date(limit)) {\n           return undefined\n         } else {\n           return { message: messages.dateFormat }\n         }\n"
                },
                {
                    "date": 1713979464548,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,14 @@\n       if (limit) {\n         if (new Date(cast) >= new Date(limit)) {\n           return undefined\n         } else {\n-          return { message: messages.dateFormat }\n+          return { message: {\n+            message: {\n+              defaultMessage: 'Must be less than 21',\n+              description:\n+                'The error message appears when the the given value is less than 21'\n+            } }\n         }\n       }\n     }\n   }\n"
                },
                {
                    "date": 1713979486198,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,14 +38,9 @@\n       if (limit) {\n         if (new Date(cast) >= new Date(limit)) {\n           return undefined\n         } else {\n-          return { message: {\n-            message: {\n-              defaultMessage: 'Must be less than 21',\n-              description:\n-                'The error message appears when the the given value is less than 21'\n-            } }\n+          return { message: messages.dateFormat }\n         }\n       }\n     }\n   }\n"
                },
                {
                    "date": 1713979538195,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,9 @@\n  *\n  * Copyright (C) The OpenCRVS Authors located at https://github.com/opencrvs/opencrvs-core/blob/master/AUTHORS.\n  */\n \n+import { MessageDescriptor } from 'react-intl'\n import {\n   IFormFieldValue,\n   Validation,\n   ValidationResult\n@@ -30,9 +31,9 @@\n }\n \n export const dateNotPastFieldDate =\n   (section: string, fieldname: string): Validation =>\n-  (value: IFormFieldValue, drafts?) => {\n+  (value: IFormFieldValue, drafts?): MessageDescriptor | undefined => {\n     const cast = value as string\n     if (section && fieldname && drafts) {\n       const limit = drafts[section][fieldname] as string\n       if (limit) {\n"
                },
                {
                    "date": 1713979572563,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,13 @@\n       if (limit) {\n         if (new Date(cast) >= new Date(limit)) {\n           return undefined\n         } else {\n-          return { message: messages.dateFormat }\n+          return { message: {\n+            defaultMessage: 'Must be less than 21',\n+            description:\n+              'The error message appears when the the given value is less than 21'\n+          } }\n         }\n       }\n     }\n   }\n"
                },
                {
                    "date": 1713979597435,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,12 @@\n }\n \n export const dateNotPastFieldDate =\n   (section: string, fieldname: string): Validation =>\n-  (value: IFormFieldValue, drafts?): MessageDescriptor | undefined => {\n+  (\n+    value: IFormFieldValue,\n+    drafts?\n+  ): { message: MessageDescriptor } | undefined => {\n     const cast = value as string\n     if (section && fieldname && drafts) {\n       const limit = drafts[section][fieldname] as string\n       if (limit) {\n"
                },
                {
                    "date": 1713979607663,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,24 +31,23 @@\n }\n \n export const dateNotPastFieldDate =\n   (section: string, fieldname: string): Validation =>\n-  (\n-    value: IFormFieldValue,\n-    drafts?\n-  ): { message: MessageDescriptor } | undefined => {\n+  (value: IFormFieldValue, drafts?) => {\n     const cast = value as string\n     if (section && fieldname && drafts) {\n       const limit = drafts[section][fieldname] as string\n       if (limit) {\n         if (new Date(cast) >= new Date(limit)) {\n           return undefined\n         } else {\n-          return { message: {\n-            defaultMessage: 'Must be less than 21',\n-            description:\n-              'The error message appears when the the given value is less than 21'\n-          } }\n+          return {\n+            message: {\n+              defaultMessage: 'Must be less than 21',\n+              description:\n+                'The error message appears when the the given value is less than 21'\n+            }\n+          }\n         }\n       }\n     }\n   }\n"
                },
                {
                    "date": 1713979666471,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,8 @@\n  *\n  * Copyright (C) The OpenCRVS Authors located at https://github.com/opencrvs/opencrvs-core/blob/master/AUTHORS.\n  */\n \n-import { MessageDescriptor } from 'react-intl'\n import {\n   IFormFieldValue,\n   Validation,\n   ValidationResult\n@@ -31,9 +30,9 @@\n }\n \n export const dateNotPastFieldDate =\n   (section: string, fieldname: string): Validation =>\n-  (value: IFormFieldValue, drafts?) => {\n+  (value: IFormFieldValue, drafts?): ValidationResult | undefined => {\n     const cast = value as string\n     if (section && fieldname && drafts) {\n       const limit = drafts[section][fieldname] as string\n       if (limit) {\n@@ -45,9 +44,9 @@\n               defaultMessage: 'Must be less than 21',\n               description:\n                 'The error message appears when the the given value is less than 21'\n             }\n-          }\n+          } satisfies ValidationResult\n         }\n       }\n     }\n   }\n"
                },
                {
                    "date": 1713979688795,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n               defaultMessage: 'Must be less than 21',\n               description:\n                 'The error message appears when the the given value is less than 21'\n             }\n-          } satisfies ValidationResult\n+          }\n         }\n       }\n     }\n   }\n"
                },
                {
                    "date": 1713979823180,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,10 @@\n           return {\n             message: {\n               defaultMessage: 'Must be less than 21',\n               description:\n-                'The error message appears when the the given value is less than 21'\n+                'The error message appears when the the given value is less than 21',\n+                id: 'form.field.previewGroups.placeOfBirhAddress'\n             }\n           }\n         }\n       }\n"
                },
                {
                    "date": 1713979842034,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n             message: {\n               defaultMessage: 'Must be less than 21',\n               description:\n                 'The error message appears when the the given value is less than 21',\n-              id: 'form.field.previewGroups.placeOfBirhAddress'\n+              id: 'validations.dateNotPastFieldDate'\n             }\n           }\n         }\n       }\n"
                },
                {
                    "date": 1713980056647,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n             message: {\n               defaultMessage: 'Must be less than 21',\n               description:\n                 'The error message appears when the the given value is less than 21',\n-              id: 'validations.dateformat'\n+              id: 'validations.dateFormat'\n             }\n           }\n         }\n       }\n"
                }
            ],
            "date": 1713979332776,
            "name": "Commit-0",
            "content": "/*\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n *\n * OpenCRVS is also distributed under the terms of the Civil Registration\n * & Healthcare Disclaimer located at http://opencrvs.org/license.\n *\n * Copyright (C) The OpenCRVS Authors located at https://github.com/opencrvs/opencrvs-core/blob/master/AUTHORS.\n */\n\nimport {\n  IFormFieldValue,\n  Validation,\n  ValidationResult\n} from '../../types/types'\n\nexport function isNumberLessThan21(value: IFormFieldValue) {\n  if (Number(value) < 21) {\n    return {\n      message: {\n        defaultMessage: 'Must be less than 21',\n        description:\n          'The error message appears when the the given value is less than 21'\n      }\n    } satisfies ValidationResult\n  }\n\n  return {}\n}\n\nexport const dateNotPastFieldDate =\n  (section: string, fieldname: string): Validation =>\n  (value: IFormFieldValue, drafts?) => {\n    const cast = value as string\n    if (section && fieldname && drafts) {\n      const limit = drafts[section][fieldname] as string\n      if (limit) {\n        if (isDateNotPastLimit(cast, new Date(limit))) {\n          return undefined\n        } else {\n          return { message: messages.dateFormat }\n        }\n      }\n    }\n  }\n"
        }
    ]
}