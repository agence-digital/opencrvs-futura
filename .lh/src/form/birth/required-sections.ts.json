{
    "sourceFile": "src/form/birth/required-sections.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1713981718149,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1713981718149,
            "name": "Commit-0",
            "content": "import { getSectionMapping } from '@countryconfig/utils/mapping/section/birth/mapping-utils'\nimport { formMessageDescriptors } from '../common/messages'\nimport { ISerializedFormSection } from '../types/types'\nimport { getFieldMapping } from '@countryconfig/utils/mapping/field-mapping-utils'\n\nexport const registrationSection = {\n  id: 'registration', // A hidden 'registration' section must be included to store identifiers in a form draft that are used in certificates\n  viewType: 'hidden',\n  name: {\n    defaultMessage: 'Registration',\n    description: 'Form section name for Registration',\n    id: 'form.section.declaration.name'\n  },\n  groups: [],\n  mapping: getSectionMapping('registration')\n} as ISerializedFormSection\n\nexport const birthDocumentExtraValue = {\n  CHILD: 'CHILD',\n  FATHER: 'FATHER',\n  MOTHER: 'MOTHER',\n  PARENT: 'PARENT',\n  OTHER: 'OTHER',\n  INFORMANT_ID_PROOF: 'INFORMANT_ID_PROOF',\n  LEGAL_GUARDIAN_PROOF: 'LEGAL_GUARDIAN_PROOF'\n}\n\nexport const birthDocumentType = {\n  BIRTH_CERTIFICATE: 'BIRTH_CERTIFICATE',\n  NATIONAL_ID: 'NATIONAL_ID',\n  PASSPORT: 'PASSPORT',\n  OTHER: 'OTHER',\n  NOTIFICATION_OF_BIRTH: 'NOTIFICATION_OF_BIRTH',\n  PROOF_OF_LEGAL_GUARDIANSHIP: 'PROOF_OF_LEGAL_GUARDIANSHIP',\n  PROOF_OF_ASSIGNED_RESPONSIBILITY: 'PROOF_OF_ASSIGNED_RESPONSIBILITY'\n}\n\nexport const documentsSection = {\n  id: 'documents',\n  viewType: 'form',\n  name: formMessageDescriptors.documentsName,\n  title: {\n    defaultMessage: 'Attaching supporting documents',\n    description: 'Form section title for Documents',\n    id: 'form.section.documents.title'\n  },\n  groups: [\n    {\n      id: 'documents-view-group',\n      fields: [\n        {\n          name: 'paragraph',\n          type: 'PARAGRAPH',\n          label: formMessageDescriptors.documentsParagraph,\n          initialValue: '',\n          validator: []\n        },\n        {\n          name: 'uploadDocForChildDOB',\n          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n          label: formMessageDescriptors.proofOfBirth,\n          initialValue: '',\n          extraValue: birthDocumentExtraValue.CHILD,\n          hideAsterisk: true,\n          required: true,\n          validator: [],\n          options: [\n            {\n              value: birthDocumentType.NOTIFICATION_OF_BIRTH,\n              label: formMessageDescriptors.docTypeChildBirthProof\n            }\n          ],\n          mapping: getFieldMapping('documents')\n        },\n        {\n          name: 'uploadDocForMother',\n          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n          label: formMessageDescriptors.proofOfMothersID,\n          initialValue: '',\n          extraValue: birthDocumentExtraValue.MOTHER,\n          hideAsterisk: true,\n          validator: [],\n          options: [\n            {\n              value: birthDocumentType.NATIONAL_ID,\n              label: formMessageDescriptors.docTypeNID\n            },\n            {\n              value: birthDocumentType.PASSPORT,\n              label: formMessageDescriptors.docTypePassport\n            },\n            {\n              value: birthDocumentType.BIRTH_CERTIFICATE,\n              label: formMessageDescriptors.docTypeBirthCert\n            },\n            {\n              value: birthDocumentType.OTHER,\n              label: formMessageDescriptors.docTypeOther\n            }\n          ],\n          conditionals: [\n            {\n              description: 'Hidden for Parent Details none or Mother only',\n              action: 'hide',\n              expression:\n                'draftData && draftData.mother && !draftData.mother.detailsExist'\n            }\n          ],\n          mapping: getFieldMapping('documents')\n        },\n        {\n          name: 'uploadDocForFather',\n          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n          label: formMessageDescriptors.proofOfFathersID,\n          initialValue: '',\n          extraValue: birthDocumentExtraValue.FATHER,\n          hideAsterisk: true,\n          validator: [],\n          options: [\n            {\n              value: birthDocumentType.NATIONAL_ID,\n              label: formMessageDescriptors.docTypeNID\n            },\n            {\n              value: birthDocumentType.PASSPORT,\n              label: formMessageDescriptors.docTypePassport\n            },\n            {\n              value: birthDocumentType.BIRTH_CERTIFICATE,\n              label: formMessageDescriptors.docTypeBirthCert\n            },\n            {\n              value: birthDocumentType.OTHER,\n              label: formMessageDescriptors.docTypeOther\n            }\n          ],\n          conditionals: [\n            {\n              description: 'Hidden for Parent Details none or Father only',\n              action: 'hide',\n              expression:\n                'draftData && draftData.father && !draftData.father.detailsExist'\n            }\n          ],\n          mapping: getFieldMapping('documents')\n        },\n        {\n          name: 'uploadDocForInformant',\n          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n          label: formMessageDescriptors.proofOfInformantsID,\n          initialValue: '',\n          extraValue: birthDocumentExtraValue.INFORMANT_ID_PROOF,\n          hideAsterisk: true,\n          validator: [],\n          options: [\n            {\n              value: birthDocumentType.NATIONAL_ID,\n              label: formMessageDescriptors.docTypeNID\n            },\n            {\n              value: birthDocumentType.PASSPORT,\n              label: formMessageDescriptors.docTypePassport\n            },\n            {\n              value: birthDocumentType.BIRTH_CERTIFICATE,\n              label: formMessageDescriptors.docTypeBirthCert\n            },\n            {\n              value: birthDocumentType.OTHER,\n              label: formMessageDescriptors.docTypeOther\n            }\n          ],\n          conditionals: [\n            {\n              action: 'hide',\n              expression:\n                \"draftData?.informant?.informantType === 'MOTHER' || draftData?.informant?.informantType === 'FATHER'\"\n            }\n          ],\n          mapping: getFieldMapping('documents')\n        },\n        {\n          name: 'uploadDocForProofOfLegalGuardian',\n          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n          label: formMessageDescriptors.otherBirthSupportingDocuments,\n          initialValue: '',\n          extraValue: birthDocumentExtraValue.LEGAL_GUARDIAN_PROOF,\n          hideAsterisk: true,\n          validator: [],\n          options: [\n            {\n              value: birthDocumentType.PROOF_OF_LEGAL_GUARDIANSHIP,\n              label: formMessageDescriptors.legalGuardianProof\n            },\n            {\n              value: birthDocumentType.PROOF_OF_ASSIGNED_RESPONSIBILITY,\n              label: formMessageDescriptors.assignedResponsibilityProof\n            }\n          ],\n          conditionals: [\n            {\n              action: 'hide',\n              expression:\n                \"(draftData && draftData.registration && draftData.registration.informantType && selectedInformantAndContactType.selectedInformantType && (selectedInformantAndContactType.selectedInformantType === 'MOTHER' || selectedInformantAndContactType.selectedInformantType === 'FATHER'))\"\n            }\n          ],\n          mapping: getFieldMapping('documents')\n        }\n      ]\n    }\n  ]\n} as ISerializedFormSection\n"
        }
    ]
}